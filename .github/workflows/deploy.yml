name: Deploy website

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: dependencies-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Deploy
        env:
          DEPLOYER_HOSTNAME: ${{ secrets.DEPLOYER_HOSTNAME }}
          DEPLOYER_REMOTE_USER: ${{ secrets.DEPLOYER_REMOTE_USER }}
          DEPLOYER_SSH_PORT: ${{ secrets.DEPLOYER_SSH_PORT }}
          DEPLOYER_DEPLOY_PATH: ${{ secrets.DEPLOYER_DEPLOY_PATH }}
          DEPLOYER_BIN_PHP: ${{ secrets.DEPLOYER_BIN_PHP }}
          DEPLOYER_BIN_COMPOSER: ${{ secrets.DEPLOYER_BIN_COMPOSER }}
          SSHPASS: ${{ secrets.DEPLOYER_SSH_PASSWORD }}
        run: |
          sshpass -e vendor/bin/dep deploy prod
