name: Snyk reviewer

on: pull_request_target

permissions:
  pull-requests: write
  contents: write

jobs:
  review-snyk-pr:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'snyk-bot' }}
    steps:
      - name: Pull request metadata
        id: pr-metadata
        uses: dependabot/fetch-metadata@v1.3.5
        with:
          skip-commit-verification: true
      - name: Enable auto-merge for Snyk PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Approve patch and minor updates
        if: ${{steps.pr-metadata.outputs.update-type == 'version-update:semver-patch' || steps.pr-metadata.outputs.update-type == 'version-update:semver-minor'}}
        run: gh pr review $PR_URL --approve -b "I'm **approving** this pull request because **it includes a patch or minor update**"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Approve major updates of development dependencies
        if: ${{steps.pr-metadata.outputs.update-type == 'version-update:semver-major' && steps.pr-metadata.outputs.dependency-type == 'direct:development'}}
        run: gh pr review $PR_URL --approve -b "I'm **approving** this pull request because **it includes a major update of a dependency used only in development**"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Comment on major updates of non-development dependencies
        if: ${{steps.pr-metadata.outputs.update-type == 'version-update:semver-major' && steps.pr-metadata.outputs.dependency-type == 'direct:production'}}
        run: |
          gh pr comment $PR_URL --body "I'm **not approving** this PR because **it includes a major update of a dependency used in production**"
          gh pr edit $PR_URL --add-label "requires-manual-qa"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
