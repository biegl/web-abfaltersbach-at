name: Test App

on:
  pull_request:
  schedule:
    - cron: "0 2 * * *"

jobs:
  test-app:
    name: Test App
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mariadb:10.2
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: cypress
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Cache dependencies
        uses: actions/cache@v2.1.5
        with:
          path: ~/.composer/cache/files
          key: dependencies-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Setup laravel
        run: |
          composer install --no-interaction --no-suggest --prefer-dist --optimize-autoloader
          chmod -R 777 storage bootstrap/cache
          php artisan migrate
          npm install
          npm run production

      - name: Generate Application Key
        run: |
          php artisan key:generate

      - name: Create Database
        run: |
          mkdir -p run/database
          touch run/database/database.sqlite

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/pest

      - name: Run Laravel Server
        run: php artisan serve &
        env:
          APP_ENV: local
          DB_CONNECTION: mysql
          DB_DATABASE: cypress
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_USER: root

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          headless: true
          record: true
          wait-on: "http://127.0.0.1:8000"
          wait-on-timeout: 60
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@master
        if: failure()
        with:
          name: screenshots
          path: cypress/screenshots
      - uses: actions/upload-artifact@master
        with:
          name: videos
          path: cypress/videos

  test-easyadmin:
    name: Test Easyadmin
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Cache dependencies
        uses: actions/cache@v2.1.5
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Test EasyAdmin
        working-directory: ./resources/easyadmin
        run: |
          npm install
          npm run build --if-present
          npm run test:unit
        env:
          CI: true

  automerge:
    name: Automerge Dependabot Pull Request
    runs-on: ubuntu-latest
    needs: [test-app, test-easyadmin]
    if: github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
    steps:
      - name: automerge
        uses: "pascalgn/automerge-action@v0.13.1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: "!WIP"
          MERGE_METHOD: "squash"
